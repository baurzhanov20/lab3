def is_prime(num):
     if num < 2:
         return False
     for i in range(2, int(num**0.5) + 1):
         if num % i == 0:
             return False
     return True

number = int(input("Enter a number: "))
while True:
     if is_prime(number):
         print(f"{number} is prime.")
         break
     else:
         number += 1
         continue



#def is_prime(num): Это определяет функцию с именем is_prime, которая принимает целое число num в качестве своего аргумента. Он проверяет, является ли num простым числом, используя обычный алгоритм проверки простых чисел. Если num меньше 2 или если у него есть какие-либо делители между 2 и квадратным корнем из num, он возвращает значение False. В противном случае он возвращает значение True.
#number = int(input("Введите число: ")): Эта строка предлагает пользователю ввести число с помощью функции input() и сохраняет его в переменной number после преобразования в целое число.
#while True:: Эта строка запускает бесконечный цикл while, потому что True всегда истинно. Цикл будет продолжаться до тех пор, пока не будет встречен оператор break.
#Внутри цикла:
#if is_prime(number):: Это проверяет, является ли введенное пользователем число простым, вызывая функцию is_prime. Если оно простое, программа выводит сообщение о том, что число простое, а затем выходит из цикла с помощью break.
#else:: Если число не является простым, программа увеличивает число на 1 (число += 1), чтобы проверить следующее число, и использует continue, чтобы пропустить оставшийся код внутри цикла и перейти к следующей итерации.
#Программа, по сути, продолжает увеличивать число до тех пор, пока не найдет простое число, и в этот момент она выходит из цикла и печатает, что это простое число. Таким образом, он проверяет каждое последующее число, чтобы определить, простое оно или нет, и продолжает до тех пор, пока не будет найдено простое число.