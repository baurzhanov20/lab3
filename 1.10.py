def is_palindrome(s):
    s = s.replace(" ", "").lower()
    return s == s[::-1]
user_input = input("Enter a string: ")
if is_palindrome(user_input):
    print("It's a palindrome!")
else:
    print("It's not a palindrome.")


#def is_palindrome(s): Эта строка определяет функцию с именем is_palindrome, которая принимает единственный аргумент s, представляющий собой строку, подлежащую проверке на наличие палиндромных свойств.
#s = s.replace(" ", "").lower(): Внутри функции код удаляет все пробелы из входной строки s и преобразует ее в нижний регистр. Это сделано для того, чтобы гарантировать, что сравнение не учитывает регистр и пробелы игнорируются при проверке на наличие палиндромов.
#return s == s[::-1]: Функция возвращает значение True, если измененная строка s равна ее обратному значению, которое получается с помощью нарезки строк (s[::-1]). Это сравнение проверяет, является ли входная строка палиндромом.
#user_input = input("Введите строку: "): Вне функции код предлагает пользователю ввести строку с помощью input(). Введенная строка сохраняется в переменной user_input.
#если is_palindrome(user_input):: Эта строка вызывает функцию is_palindrome с user_input в качестве аргумента и проверяет, является ли возвращаемое значение True, указывая, что входная строка является палиндромом.
#Если входная строка является палиндромом, код выводит "Это палиндром!" с помощью print.
#Если входная строка не является палиндромом, код выводит сообщение "Это не палиндром".
#Итак, этот код определяет функцию для проверки того, является ли строка палиндромом, а затем она принимает пользовательский ввод, проверяет, является ли входная строка палиндромом, и печатает соответствующее сообщение. Функция удаляет пробелы и преобразует строку в нижний регистр для последовательной и нечувствительной к регистру проверки палиндрома.